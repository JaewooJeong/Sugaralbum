IHByZWNpc2lvbiBoaWdocCBmbG9hdDsNCiANCiB2YXJ5aW5nIHZlYzIgdGV4dHVyZUNvb3JkaW5h
dGU7DQogdmFyeWluZyB2ZWMyIGxlZnRUZXh0dXJlQ29vcmRpbmF0ZTsNCiB2YXJ5aW5nIHZlYzIg
cmlnaHRUZXh0dXJlQ29vcmRpbmF0ZTsNCiANCiB2YXJ5aW5nIHZlYzIgdG9wVGV4dHVyZUNvb3Jk
aW5hdGU7DQogdmFyeWluZyB2ZWMyIHRvcExlZnRUZXh0dXJlQ29vcmRpbmF0ZTsNCiB2YXJ5aW5n
IHZlYzIgdG9wUmlnaHRUZXh0dXJlQ29vcmRpbmF0ZTsNCiANCiB2YXJ5aW5nIHZlYzIgYm90dG9t
VGV4dHVyZUNvb3JkaW5hdGU7DQogdmFyeWluZyB2ZWMyIGJvdHRvbUxlZnRUZXh0dXJlQ29vcmRp
bmF0ZTsNCiB2YXJ5aW5nIHZlYzIgYm90dG9tUmlnaHRUZXh0dXJlQ29vcmRpbmF0ZTsNCiANCiB1
bmlmb3JtIHNhbXBsZXIyRCBpbnB1dEltYWdlVGV4dHVyZTsNCiANCiB1bmlmb3JtIGhpZ2hwIGZs
b2F0IGludGVuc2l0eTsNCiB1bmlmb3JtIGhpZ2hwIGZsb2F0IHRocmVzaG9sZDsNCiB1bmlmb3Jt
IGhpZ2hwIGZsb2F0IHF1YW50aXphdGlvbkxldmVsczsNCiANCiBjb25zdCBoaWdocCB2ZWMzIFcg
PSB2ZWMzKDAuMjEyNSwgMC43MTU0LCAwLjA3MjEpOw0KIA0KIHZvaWQgbWFpbigpDQogew0KICAg
ICB2ZWM0IHRleHR1cmVDb2xvciA9IHRleHR1cmUyRChpbnB1dEltYWdlVGV4dHVyZSwgdGV4dHVy
ZUNvb3JkaW5hdGUpOw0KICAgICANCiAgICAgZmxvYXQgYm90dG9tTGVmdEludGVuc2l0eSA9IHRl
eHR1cmUyRChpbnB1dEltYWdlVGV4dHVyZSwgYm90dG9tTGVmdFRleHR1cmVDb29yZGluYXRlKS5y
Ow0KICAgICBmbG9hdCB0b3BSaWdodEludGVuc2l0eSA9IHRleHR1cmUyRChpbnB1dEltYWdlVGV4
dHVyZSwgdG9wUmlnaHRUZXh0dXJlQ29vcmRpbmF0ZSkucjsNCiAgICAgZmxvYXQgdG9wTGVmdElu
dGVuc2l0eSA9IHRleHR1cmUyRChpbnB1dEltYWdlVGV4dHVyZSwgdG9wTGVmdFRleHR1cmVDb29y
ZGluYXRlKS5yOw0KICAgICBmbG9hdCBib3R0b21SaWdodEludGVuc2l0eSA9IHRleHR1cmUyRChp
bnB1dEltYWdlVGV4dHVyZSwgYm90dG9tUmlnaHRUZXh0dXJlQ29vcmRpbmF0ZSkucjsNCiAgICAg
ZmxvYXQgbGVmdEludGVuc2l0eSA9IHRleHR1cmUyRChpbnB1dEltYWdlVGV4dHVyZSwgbGVmdFRl
eHR1cmVDb29yZGluYXRlKS5yOw0KICAgICBmbG9hdCByaWdodEludGVuc2l0eSA9IHRleHR1cmUy
RChpbnB1dEltYWdlVGV4dHVyZSwgcmlnaHRUZXh0dXJlQ29vcmRpbmF0ZSkucjsNCiAgICAgZmxv
YXQgYm90dG9tSW50ZW5zaXR5ID0gdGV4dHVyZTJEKGlucHV0SW1hZ2VUZXh0dXJlLCBib3R0b21U
ZXh0dXJlQ29vcmRpbmF0ZSkucjsNCiAgICAgZmxvYXQgdG9wSW50ZW5zaXR5ID0gdGV4dHVyZTJE
KGlucHV0SW1hZ2VUZXh0dXJlLCB0b3BUZXh0dXJlQ29vcmRpbmF0ZSkucjsNCiAgICAgZmxvYXQg
aCA9IC10b3BMZWZ0SW50ZW5zaXR5IC0gMi4wICogdG9wSW50ZW5zaXR5IC0gdG9wUmlnaHRJbnRl
bnNpdHkgKyBib3R0b21MZWZ0SW50ZW5zaXR5ICsgMi4wICogYm90dG9tSW50ZW5zaXR5ICsgYm90
dG9tUmlnaHRJbnRlbnNpdHk7DQogICAgIGZsb2F0IHYgPSAtYm90dG9tTGVmdEludGVuc2l0eSAt
IDIuMCAqIGxlZnRJbnRlbnNpdHkgLSB0b3BMZWZ0SW50ZW5zaXR5ICsgYm90dG9tUmlnaHRJbnRl
bnNpdHkgKyAyLjAgKiByaWdodEludGVuc2l0eSArIHRvcFJpZ2h0SW50ZW5zaXR5Ow0KICAgICAN
CiAgICAgZmxvYXQgbWFnID0gbGVuZ3RoKHZlYzIoaCwgdikpOw0KDQogICAgIHZlYzMgcG9zdGVy
aXplZEltYWdlQ29sb3IgPSBmbG9vcigodGV4dHVyZUNvbG9yLnJnYiAqIHF1YW50aXphdGlvbkxl
dmVscykgKyAwLjUpIC8gcXVhbnRpemF0aW9uTGV2ZWxzOw0KICAgICANCiAgICAgZmxvYXQgdGhy
ZXNob2xkVGVzdCA9IDEuMCAtIHN0ZXAodGhyZXNob2xkLCBtYWcpOw0KICAgICANCiAgICAgZ2xf
RnJhZ0NvbG9yID0gdmVjNChwb3N0ZXJpemVkSW1hZ2VDb2xvciAqIHRocmVzaG9sZFRlc3QsIHRl
eHR1cmVDb2xvci5hKTsNCiB9