import com.android.builder.core.BuilderConstants

apply plugin: 'com.android.library'

android {
    compileSdk 33
    buildToolsVersion '31.0.0'

    defaultConfig {
        version 3
        minSdkVersion 24
        targetSdkVersion 33

        ndk {
            moduleName "native_filter"
            ldLibs "log"
            stl "c++_static"
        }
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
        ndk.abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
        }
    }

    allprojects {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/NOTICE'

    }
    ndkVersion '25.1.8937393'

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            if (output.outputFileName != null && output.outputFileName.endsWith('.aar')) {
                if (name == com.android.builder.core.BuilderConstants.RELEASE) {
                    output.outputFileName = new File("${archivesBaseName}-v${version}r.aar")
                }else{
                    output.outputFileName = new File("${archivesBaseName}-v${version}d.aar")
                }
            }
        }
    }
}

dependencies {
//    compile files('libs/android-support-v4.jar')
    api 'androidx.legacy:legacy-support-v4:1.0.0'
//    compile "com.android.support:appcompat-v7:23.0.1"
    api files('libs/httpclient-4.1.1.jar')
    api files('libs/httpcore-4.1.jar')
    api files('libs/httpmime-4.2.5.jar')
    api files('libs/renderscript-v8.jar')
    api files('libs/jackson-core-asl-1.9.12.jar')
    api files('libs/jackson-mapper-asl-1.9.12.jar')
    api files('libs/sd-sdk-device-info.jar')
    api files('libs/sd-sdk-facial-processing.jar')
}

copy {
    from 'build/outputs/aar'
    into "../aarlibs/release"
    include '**/*r.aar'
}

